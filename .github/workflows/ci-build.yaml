name: Enterprise - build

on:
  push:
    branches:
      - gh-readonly-queue/main/**
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Test building of packages
    runs-on:
      group: cgi-builder-${{ matrix.arch }}

    strategy:
      matrix:
        arch: ["x86_64", "aarch64"]
      fail-fast: false

    container:
      image: ghcr.io/wolfi-dev/sdk:latest@sha256:954e0b8b77c9cbe82792c321787f5b73ab5765ee887df921a13778c9c0d30714
      options: |
        --cap-add NET_ADMIN --cap-add SYS_ADMIN --security-opt seccomp=unconfined --security-opt apparmor:unconfined

    permissions:
      packages: read
      contents: read
      pull-requests: read
      id-token: write

    env:
      PROJECT: prod-images-c6e5
      FQ_SERVICE_ACCOUNT: prod-images-ci@prod-images-c6e5.iam.gserviceaccount.com

    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: "recursive"
          token: ${{ secrets.ENTERPRISE_GRAFANA_REPO_ACCESS }}

      - name: "Trust the github workspace"
        run: |
          # This is to avoid fatal errors about "dubious ownership" because we are
          # running inside of a container action with the workspace mounted in.
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: check changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          filters: |
            change:
              - "*.yaml"
              - "*.env"
              - "Makefile"
              - ".github/workflows/dag-push-enterprise.yaml"

      - name: Generate snapshot date
        if: steps.changes.outputs.change == 'true'
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> "$GITHUB_OUTPUT"
          echo "epoch=$(date -u +%s)" >> "$GITHUB_OUTPUT"
        shell: bash

      - uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033 # v1.1.1
        if: steps.changes.outputs.change == 'true'
        with:
          workload_identity_provider: "projects/618116202522/locations/global/workloadIdentityPools/prod-shared-e350/providers/prod-shared-gha"
          service_account: ${{ env.FQ_SERVICE_ACCOUNT }}

      - if: steps.changes.outputs.change == 'true'
        run: |
          # TODO: Replace this with a wolfi image :(
          apk add google-cloud-sdk

      - uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b # v1.1.1
        if: steps.changes.outputs.change == 'true'
        with:
          project_id: ${{ env.PROJECT }}

      - name: "Generate local signing key"
        if: steps.changes.outputs.change == 'true'
        run: |
          make MELANGE="melange" local-melange-enterprise.rsa

      - name: "Sync public package repository"
        if: steps.changes.outputs.change == 'true'
        run: |
          mkdir -p "./packages/${{ matrix.arch }}"
          gsutil -m rsync -r gs://chainguard-enterprise-registry-destination/os/${{ matrix.arch }}/ "./packages/${{ matrix.arch }}/"

          # hack to ensure our make targets are dependent appropriately
          find "./packages" -print -exec touch \{} \;

          gsutil cp gs://chainguard-enterprise-registry-destination/os/chainguard-enterprise.rsa.pub "./packages/"

      - name: "Build Enterprise packages"
        if: steps.changes.outputs.change == 'true'
        run: |
          make --debug MELANGE_EXTRA_OPTS="--create-build-log --keyring-append ./packages/chainguard-enterprise.rsa.pub" REPO="./packages" -j1 all

      - name: Check for file
        if: steps.changes.outputs.change == 'true'
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check sonames
        if: ${{ steps.file_check.outputs.exists == 'true' && steps.changes.outputs.change == 'true'}}
        run: |
          wolfictl check so-name

      - name: Check diff
        if: ${{ steps.file_check.outputs.exists == 'true' && steps.changes.outputs.change == 'true'}}
        # Let's not fail the whole job if this step fails as it is for improved UX rather than an enforced check
        continue-on-error: true
        run: |
          wolfictl check diff

      - name: Check for diff file
        if: steps.changes.outputs.change == 'true'
        id: diff_file_check
        run: |
          if test -f "diff.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
