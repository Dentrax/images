name: Enterprise

on:
  push:
    branches:
      - gh-readonly-queue/main/**
  pull_request:
    branches:
      - main
    paths:
      - "*.yaml"
      - "*.env"
      - "Makefile"
      - ".github/workflows/dag-push-enterprise.yaml"

jobs:
  build:
    name: Test building of packages
    runs-on:
      group: cgi-builder-spot-${{ matrix.arch }}

    strategy:
      matrix:
        arch: [ "x86_64", "aarch64" ]
      fail-fast: false

    container:
      image: ghcr.io/wolfi-dev/sdk:latest@sha256:9cc3c2aa55b48c9186dd7bca5967d8b201db01d1a875fb0208827dc57fde18f7
      options: |
        --cap-add NET_ADMIN --cap-add SYS_ADMIN --security-opt seccomp=unconfined --security-opt apparmor:unconfined

    permissions:
      packages: read
      contents: read
      id-token: write

    env:
      PROJECT: prod-images-c6e5
      FQ_SERVICE_ACCOUNT: prod-images-ci@prod-images-c6e5.iam.gserviceaccount.com

    steps:
      - name: Generate snapshot date
        id: snapshot-date
        run: |
          echo "date=$(date -u +%Y%m%d)" >> "$GITHUB_OUTPUT"
          echo "epoch=$(date -u +%s)" >> "$GITHUB_OUTPUT"
        shell: bash

      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: 'recursive'
          token: ${{ secrets.ENTERPRISE_GRAFANA_REPO_ACCESS }}

      - name: 'Trust the github workspace'
        run: |
          # This is to avoid fatal errors about "dubious ownership" because we are
          # running inside of a container action with the workspace mounted in.
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          
      - uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # v1.0.0
        with:
          workload_identity_provider: "projects/618116202522/locations/global/workloadIdentityPools/prod-shared-e350/providers/prod-shared-gha"
          service_account: ${{ env.FQ_SERVICE_ACCOUNT }}

      - run: |
          # TODO: Replace this with a wolfi image :(
          apk add google-cloud-sdk

      - uses: google-github-actions/setup-gcloud@62d4898025f6041e16b1068643bfc5a696863587 # v1.1.0
        with:
          project_id: ${{ env.PROJECT }}

      - name: 'Generate local signing key'
        run: |
          make MELANGE="melange" local-melange-enterprise.rsa

      - name: 'Sync public package repository'
        run: |
          mkdir -p "./packages/${{ matrix.arch }}"
          gsutil -m rsync -r gs://chainguard-enterprise-registry-destination/os/${{ matrix.arch }}/ "./packages/${{ matrix.arch }}/"

          # hack to ensure our make targets are dependent appropriately
          find "./packages" -print -exec touch \{} \;

          gsutil cp gs://chainguard-enterprise-registry-destination/os/chainguard-enterprise.rsa.pub "./packages/"

      - name: 'Build Enterprise packages'
        run: |
          make --debug MELANGE_EXTRA_OPTS="--create-build-log --keyring-append ./packages/chainguard-enterprise.rsa.pub" REPO="./packages" -j1 all

      - name: Check for file
        id: file_check
        run: |
          if test -f "packages.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Check sonames
        if: steps.file_check.outputs.exists == 'true'
        run: |
          wolfictl check so-name

      - name: Check diff
        if: steps.file_check.outputs.exists == 'true'
        # Let's not fail the whole job if this step fails as it is for improved UX rather than an enforced check
        continue-on-error: true
        run: |
          wolfictl check diff

      - name: Check for diff file
        id: diff_file_check
        run: |
          if test -f "diff.log"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
