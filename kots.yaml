package:
  name: kots
  version: 1.100.2
  epoch: 0
  description: Kubernetes Off-The-Shelf (KOTS) Software
  target-architecture:
    - all
  copyright:
    - license: Apache-2.0
      paths:
        - "*"
  dependencies:
    runtime:
      - ca-certificates-bundle
      - curl
      - bash
      - busybox
      - kubectl=~1.27
      - kubectl-1.26
      - kubectl-1.25
      - kubectl-1.24
      - kubectl-1.23
      - kubectl-1.22
      - kubectl-1.21
      - kubectl-1.20
      - kubectl-1.19
      - helm
      - py3-dateutil
      - py3-magic
      - s3cmd
      - kustomize

environment:
  contents:
    repositories:
      - https://packages.wolfi.dev/os
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    packages:
      - ca-certificates-bundle
      - build-base
      - busybox
      - git
      - go
      - nodejs
      - yarn

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/replicatedhq/kots/archive/refs/tags/v${{package.version}}.tar.gz
      expected-sha256: 110ab0c37b031a2297eb3a2b0392ac412b0e3cfc359291fbbb9289a6ab97e008

  - runs: |
      set -x
      export DESTDIR="${{targets.destdir}}"
      mkdir -p "${DESTDIR}"

      # Mitigate
      # GHSA-2x32-jm95-2cpx
      # GHSA-m9hp-7r99-94h5 / CVE-2020-26290
      # GHSA-vh7g-p26c-j2cw / CVE-2022-39222
      # dex doesn't do go mods well, so we fetch by commit (this is v2.36.0)
      go get github.com/dexidp/dex@2bb4896d120efec1adc98f5db178a6d7206c9cc7

      # Mitigate GHSA-2q89-485c-9j2x / CVE-2023-1732
      go get github.com/cloudflare/circl@v1.3.3

      # Mitigate GHSA-frqx-jfcm-6jjr / CVE-2023-33199
      go get github.com/sigstore/rekor@v1.2.0

      # Mitigate GHSA-hqxw-f8mx-cpmw / CVE-2023-2253
      go get github.com/docker/distribution@v2.8.2-beta.1+incompatible

      go mod tidy

      # Scripts etc.
      mv deploy/assets/backup.sh "${DESTDIR}/backup.sh"
      mv deploy/assets/restore-db.sh "${DESTDIR}/restore-db.sh"
      mv deploy/assets/restore-s3.sh "${DESTDIR}/restore-s3.sh"
      mv deploy/assets/restore.sh "${DESTDIR}/restore.sh"
      mv deploy/assets/migrate-s3.sh "${DESTDIR}/migrate-s3.sh"
      mv deploy/assets/fs-minio-check.sh "${DESTDIR}/fs-minio-check.sh"
      mv deploy/assets/fs-minio-reset.sh "${DESTDIR}/fs-minio-reset.sh"
      mv deploy/assets/fs-minio-keys-sha.sh "${DESTDIR}/fs-minio-keys-sha.sh"
      mv deploy/assets/s3-bucket-create.sh "${DESTDIR}/s3-bucket-create.sh"
      mv deploy/assets/s3-bucket-head.sh "${DESTDIR}/s3-bucket-head.sh"
      mv deploy/assets/kots-upgrade.sh "${DESTDIR}/kots-upgrade.sh"
      mv deploy/assets/postgres "${DESTDIR}/postgres"

      # kotsadm and kots binaries
      export VERSION=${{package.version}}
      export GIT_TAG=${{package.version}}

      # Set environment variables from repository
      source .image.env

      KOTS_KUSTOMIZE_BIN_DIR=/usr/local/bin

      # TODO: fix pact build error on arm https://github.com/pact-foundation/pact-js-core/issues/264
      export PACT_SKIP_BINARY_INSTALL=true

      # Configure Yarn
      yarn install --pure-lockfile --network-concurrency 1

      # removing tests for now to see if this builds
      make -C web deps lint build-kotsadm
      make vet kots build

      # make -C web deps lint test-unit build-kotsadm
      # make vet ci-test kots build

      mv bin/kotsadm "${DESTDIR}/kotsadm"
      mv bin/kots "${DESTDIR}/kots"

      # TODO: this is a manual intervention whenever kustomize bumps its major version
      cp /usr/bin/helm ${{targets.destdir}}/usr/local/bin/helm
      cp /usr/bin/helm ${{targets.destdir}}/usr/local/bin/helm3

      # TODO: this is a manual intervention whenever kustomize bumps its major version
      cp /usr/bin/kustomize ${{targets.destdir}}/usr/local/bin/kustomize
      cp /usr/bin/kustomize ${{targets.destdir}}/usr/local/bin/kustomize5

      cp /usr/bin/kubectl /${{targets.destdir}}/usr/local/bin/kubectl

update:
  enabled: true
  github:
    identifier: replicatedhq/kots
    strip-prefix: v
