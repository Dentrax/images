package:
  name: prometheus-2.38
  version: 2.38.0
  epoch: 2
  description: The Prometheus monitoring system and time series database.
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - ca-certificates-bundle
      - busybox
      - bash
      - go
      - nodejs

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/prometheus/prometheus
      tag: v${{package.version}}
      expected-commit: 818d6e60888b2a3ea363aee8a9828c7bafd73699

  - runs: |
      GOLDFLAGS="-w -X github.com/prometheus/common/version.Version=${{package.version}}
        -X github.com/prometheus/common/version.Revision=WolfiLinux
        -X github.com/prometheus/common/version.Branch=master
        -X github.com/prometheus/common/version.BuildUser=$USER@$HOSTNAME
        -X github.com/prometheus/common/version.BuildDate=$(date -u "+%Y%m%d-%H:%M:%S" ${SOURCE_DATE_EPOCH:+-d @$SOURCE_DATE_EPOCH})
      "
      if [ -n "$LDFLAGS" ]; then
        # LDFLAGS (and only LDFLAGS) should be passed to -extldflags.
        GOLDFLAGS="$GOLDFLAGS -extldflags '$LDFLAGS'"
      fi

      # Mitigate CVE-2023-39325 and CVE-2023-3978
      go get golang.org/x/net@v0.17.0
      # Remediate CVE-2023-45142
      go get go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp@v0.44.0
      go mod edit -droprequire=go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc
      go get go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracegrpc@v1.19.0
      go get go.opentelemetry.io/otel/exporters/otlp/otlptrace/otlptracehttp@v1.19.0
      # Remediate GHSA-m425-mq94-257g, GHSA-qppj-fm5r-hxr3
      go get google.golang.org/grpc@v1.58.3
      go mod tidy -compat=1.17

      # set -j1 to run things in the correct order in makefile
      # actual go building is still parallel
      make -j1 assets-compress

      go build \
        -trimpath \
        -mod=readonly \
        -ldflags "$GOLDFLAGS" \
        -tags netgo,builtinassets \
        ./cmd/prometheus
      go build \
        -trimpath \
        -mod=readonly \
        -ldflags "$GOLDFLAGS" \
        ./cmd/promtool

  - runs: |
      install -Dm755 prometheus "${{targets.destdir}}"/usr/bin/prometheus
      install -Dm755 promtool "${{targets.destdir}}"/usr/bin/promtool

      install -Dm644 prometheus.confd \
        "${{targets.destdir}}"/etc/conf.d/prometheus

      install -dm644 "${{targets.destdir}}"/var/lib/prometheus/data

      install -Dm644 -t "${{targets.destdir}}"/etc/prometheus \
        documentation/examples/prometheus.yml

      mkdir -p "${{targets.destdir}}"/etc/prometheus/console_libraries
      for file in console_libraries/*
      do
        install -Dm644 -t "${{targets.destdir}}"/etc/prometheus/console_libraries/ "$file"
      done

      mkdir -p "${{targets.destdir}}"/etc/prometheus/consoles
      for file in consoles/*
      do
        install -Dm644 -t "${{targets.destdir}}"/etc/prometheus/consoles/ "$file"
      done

  - uses: strip

subpackages:
  - name: ${{package.name}}-bitnami-compat
    description: "compat package with bitnami/prometheus image"
    pipeline:
      - uses: bitnami/compat
        with:
          image: prometheus
          version-path: 2/debian-11
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/prometheus/bin/
          mkdir -p ${{targets.subpkgdir}}/opt/bitnami/prometheus/conf

          chmod g+rwX ${{targets.subpkgdir}}/opt/bitnami

          cp ${{targets.destdir}}/usr/bin/prometheus ${{targets.subpkgdir}}/opt/bitnami/prometheus/bin/prometheus
          cp ${{targets.destdir}}/usr/bin/promtool ${{targets.subpkgdir}}/opt/bitnami/prometheus/bin/promtool
          cp -r ${{targets.destdir}}/etc/prometheus/* ${{targets.subpkgdir}}/opt/bitnami/prometheus/conf/
          cp -r ${{targets.destdir}}/var/lib/prometheus/data ${{targets.subpkgdir}}/opt/bitnami/prometheus/data

update:
  enabled: true
  github:
    identifier: prometheus/prometheus
    strip-prefix: v
    use-tag: true
    tag-filter: v2.38.
